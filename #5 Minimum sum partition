// Minimum sum partition
// https://practice.geeksforgeeks.org/problems/minimum-sum-partition3317/1/#


class Solution{

  public:
	int minDifference(int arr[], int n)  { 
	    // Your code goes here
	    if(n==1)
	        return arr[0];
	        
	    int i,j,sum=0;
	    for(i=0;i<n;i++)
	        sum+=arr[i];
	    
	    bool dp[n+1][sum+1];
	    
	    for(i=0;i<=n;i++)
	    {
	        for(j=0;j<=sum;j++)
	        {
	            if(i==0)
	                dp[i][j]=false;
	            if(j==0)
	                dp[i][j]=true;    
	        }
	    }
	    for(i=1;i<=n;i++)
	    {
	        for(j=1;j<=sum;j++)
	        {
	            if(arr[i-1]<=j)
	                dp[i][j] = dp[i-1][j-arr[i-1]] || dp[i-1][j];
	            else
	                dp[i][j]=dp[i-1][j];    
	        }
	    }
	    
	    for(j=sum/2;j>=0;j--)
	    {
	        if(dp[n][j]==true)
	            return sum-j-j;
	    }
	    
	    return 0;
	    
	} 
};
